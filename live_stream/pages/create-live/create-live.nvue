<template>
	<view>
		<live-pusher id="livePusher" ref="livePusher" class="livePusher" :url="url" :mode="mode" :enable-camera="enable - camera"
		 :auto-focus="true" :device-position="position" :beauty="beauty" :whiteness="whiteness" aspect="9:16" @statechange="statechange"
		 @netstatus="netstatus" @error="error" :style="'height:' + windowHeight + 'px;'" style="width:750rpx;"></live-pusher>

		<view style="left: 0;right: 0;height: 500rpx;" class="position-fixed" :style="'top:' + statusBarHeight + 'px;'">
			<view class="flex align-center justify-center" style="width: 90rpx;height: 90rpx;">
				<text class="iconfont text-white">&#xe607;</text>
			</view>

			<view class="position-absolute rounded p-2 flex align-center" style="left: 90rpx;right: 100rpx;height: 160rpx;background-color: rgba(0,0,0,0,2);">
				<view class="position-relative rounded" style="height: 120rpx;width: 120rpx;">
					<image :src="form.cover || '../../static/gift/3.png'" style="height: 120rpx;width: 120rpx;" mode="" @click="chooseCover()"></image>
					<text class="text-white position-absolute font" style="left: 0;right: 0;bottom: 0;">更换封面</text>
				</view>
				<view class="flex-1 ml-2">
					<input type="text" value="" class="mb-2" placeholder="请输入直播标题" v-model="form.title" />
					<text class="text-white font">#请选择分类</text>
				</view>
			</view>

			<view class="position-absolute right-0 flex flex-column" style="width: 100rpx;">
				<view class="flex flex-column align-center justify-center" style="height: 120rpx;width: 100rpx;" @click="switchCamera">
					<text class="iconfont text-white mb-1">&#xe605;</text>
					<text class="text-white font">翻转</text>
				</view>
				<view class="flex flex-column align-center justify-center" style="height: 120rpx;width: 100rpx;" @click="openPopup('mode')">
					<text class="iconfont text-white mb-1">&#xe60c;</text>
					<text class="text-white font">画质</text>
				</view>
				<view @click="openPopup('beauty')" class="flex flex-column align-center justify-center" style="height: 120rpx;width: 100rpx;">
					<text class="iconfont text-white mb-1">&#xe632;</text>
					<text class="text-white font">美颜</text>
				</view>
				<view @click="openPopup('whiteness')" class="flex flex-column align-center justify-center" style="height: 120rpx;width: 100rpx;">
					<text class="iconfont text-white mb-1">&#xe631;</text>
					<text class="text-white font">美白</text>
				</view>
			</view>
		</view>
		<view @click="openLiveRoom()" class="position-fixed bg-main flex align-center justify-center rounded-circle" style="left: 100rpx;right: 100rpx;bottom: 100;height: 120rpx;">
			<text class="text-white font-md">开始视频直播</text>
		</view>

		<!-- 页面弹框部分 -->
		<uni-popup type="bottom" ref="popup">
			<view class="bg-white">
				<view class="flex align-center justify-center border-bottom" style="height: 90rpx;">
					<text class="font-md">{{ popupTitle }}</text>
				</view>
				<!-- 画质选择 -->
				<view v-if="popupType === 'mode'">
					<view class="flex align-center justify-center py-2" v-for="(item, index) in modeList" :key="index" :class="mode === item.type ? 'bg-main' : ''"
					 @click="chooseMode(item)">
						<text class="font-md" :class="mode === item.type ? 'text-white' : ''">{{ item.desc }}</text>
					</view>
				</view>
				<!-- 美颜 -->
				<view v-else-if="popupType === 'beauty'">
					<slider @change="handleSliderChange" :min="0" :max="9" :step="1" :value="beauty" :block-size="18" show-value />
				</view>
				<!-- 美白 -->
				<view v-else>
					<slider @change="handleSliderChange" :min="0" :max="9" :step="1" :value="whiteness" :block-size="18" show-value />
				</view>
				<view class="f-divider"></view>
				<view @click="close()" class="flex align-center justify-center" style="height: 90rpx;" hover-class="bg-light">
					<text class="font-md">取消</text>
				</view>
			</view>
		</uni-popup>
	</view>
</template>

<script>
	import uniPopup from '../../components/uni-ui/uni-popup/uni-popup.vue';
	import $H from '@/common/request.js';
	import $C from '@/common/config.js';

	export default {
		components: {
			uniPopup
		},

		data() {
			return {
				url: 'rtmp://120.26.177.51:1935/live/exp',
				context: null,
				// 直播服务器地址，暂空
				// 标清模式
				mode: 'SD',
				// 是否启用摄像头
				enableCamera: true,
				// 默认摄像头
				position: 'back',
				// 美颜度
				beauty: 0,
				// 美白度
				whiteness: 0,
				// 窗体高度
				windowHeight: 0,
				// 上下文
				context: null,
				statusBarHeight: 0,
				modeList: [{
						type: 'SD',
						desc: '标清'
					},
					{
						type: 'HD',
						desc: '高清'
					},
					{
						type: 'FHD',
						desc: '超清'
					}
				],
				popupType: 'mode',
				form: {
					title: "",
					cover: ""
				}
			};
		},
		/**
		 * 监听页面加载，其参数为上个页面传递的数据，参数类型为Object（用于页面传参）
		 */
		onLoad() {
			let res = uni.getSystemInfoSync();
			this.windowHeight = res.windowHeight;
			this.statusBarHeight = res.statusBarHeight;
		},
		/**
		 * 监听页面初次渲染完成，如果渲染速度快，会在页面计入动画完成前触发
		 */
		onReady() {
			this.context = uni.createLivePusherContext('livePusher', this);
			this.startPreview();
		},
		computed: {
			popupTitle() {
				let o = {
					mode: '画质',
					beauty: '美颜',
					whiteness: '美白',
				};
				return o[this.popupType];
			}
		},
		methods: {
			openLiveRoom() {
				console.log("-----------------------------")
				console.log(this.form.title)
				console.log(this.form.cover)
				console.log("-----------------------------")
				$H.post('/live/create', this.form, {
					token: true
				}).then(res => {
					let options = {
						mode: this.mode,
						position: this.position,
						beauty: this.beauty,
						whiteness: this.whiteness
					}
					uni.navigateTo({
						url: `../live-room/live-room?options=${JSON.stringify(options)}&data=${encodeURIComponent(JSON.stringify(res))}`
					})
				})
			},
			chooseCover() {
				uni.chooseImage({
					count: 1,
					success: (res) => {
						$H.upload('/upload', {
							filePath: res.tempFilePaths[0]
						}, (p) => {
							console.log(p);
						}).then(res => {
							this.form.cover = $C.imgUrl + res.url
						})
					}
				})
			},
			start() {
				uni.navigateTo({
					url: "../live-room/live-room"
				})
				this.context.start({
					success: a => {
						console.log('livePusher.start:' + JSON.stringify(a));
					}
				});
			},
			close() {
				this.$refs.popup.close();
			},
			handleSliderChange(e) {
				this[this.popupType] = e.detail.value
			},
			/**
			 * 画质选择
			 * @param {Object} item
			 */
			chooseMode(item) {
				this.mode = item.type;
				uni.showToast({
					title: '画质切换为' + item.desc,
					icon: 'none'
				});
				this.$refs.popup.close();
			},
			/**
			 * 打开弹出框
			 * @param {Object} type
			 */
			openPopup(type) {
				this.popupType = type;
				this.$refs.popup.open();
			},
			/**
			 * 切换镜头
			 */
			switchCamera() {
				this.context.switchCamera({
					success: e => {
						this.position = this.position === 'back' ? 'front' : 'back';
					}
				});
			},
			/**
			 * 开启预览
			 */
			startPreview() {
				this.context.startPreview({
					success: e => {
						console.log(e);
					}
				});
			},

			/**
			 * 直播状态的变化
			 * @param {Object} e
			 */
			statechange(e) {
				console.log(e);
			},

			/**
			 * 直播网络的变化
			 * @param {Object} e
			 */
			netstatus(e) {
				console.log(e);
			},

			/**
			 * 直播出错
			 */
			error() {
				console.log(e);
			}
		}
	};
</script>

<style lang="scss"></style>
